""" HSUVision Class
"""
import contours
import numpy
import params


class HSUVision:
    """ There are three ways to use pre-defined comparable contours
        1. Use default saved contours from param
        2. Use a string path to .npy files (Only use files which generated by saveSampleContours.py script
        3. Numpy ndarrays with (n,1,2) shape (n is the number of contour points)
    """

    def __init__(self, contours_dict= {'H': params.h_cnt, 'S': params.s_cnt, 'U': params.u_cnt}):
        if not isinstance(contours_dict, dict):
            raise TypeError('A dictionary is expected but get something else as input')
        _cnts_dict = contours_dict.copy()
        for name, contour in _cnts_dict.items():
            if not ((isinstance(contour, str) and contour[-4:] == '.npy') or isinstance(contour, numpy.ndarray)):
                raise TypeError('Contours can be only a numpy ndarray or a path to .npy file')
            elif isinstance(contour, str) and '.npy' in contour:
                _cnts_dict[name] = numpy.load(contour)
        self.ref_contours = _cnts_dict.copy()

    def find_HSU(self, img, verbose=False):
        return contours.find_HSU(img, verbose, ref_contours=self.ref_contours)
