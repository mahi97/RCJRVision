""" HSUVision Class
"""
import contours
import numpy
import params


class HSUVision:
    """ There are three ways to use pre-defined comparable contours
        1. Use default saved contours from param
        2. Use a string path to .npy files (Only use files which generated by saveSampleContours.py script
        3. Numpy ndarrays with (n,1,2) shape (n is the number of contour points)
    """

    def __init__(self, h_cnt=params.h_cnt, s_cnt=params.s_cnt, u_cnt=params.u_cnt):
        if isinstance(h_cnt, str) and '.npy' in h_cnt:
            self.h_cnt = numpy.load(h_cnt)
        elif isinstance(h_cnt, numpy.ndarray):
            self.h_cnt = h_cnt
        else:
            raise TypeError('h_cnt can be only a numpy ndarray or an path to .npy file')
        if isinstance(s_cnt, str) and '.npy' in s_cnt:
            self.s_cnt = numpy.load(s_cnt)
        elif isinstance(s_cnt, numpy.ndarray):
            self.s_cnt = s_cnt
        else:
            raise TypeError('s_cnt can be only a numpy ndarray or an path to .npy file')
        if isinstance(u_cnt, str) and '.npy' in u_cnt:
            self.u_cnt = numpy.load(u_cnt)
        elif isinstance(u_cnt, numpy.ndarray):
            self.u_cnt = u_cnt
        else:
            raise TypeError('u_cnt can be only a numpy ndarray or an path to .npy file')

    def find_HSU(self, img, verbose=False):
        return contours.find_HSU(img, verbose, h_cnt=self.h_cnt, s_cnt=self.s_cnt, u_cnt=self.u_cnt)
